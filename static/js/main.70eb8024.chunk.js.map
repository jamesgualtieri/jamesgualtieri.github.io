{"version":3,"sources":["App.tsx","components/Shortcut.tsx","components/Menu.tsx","components/common/Link.ts","components/ExpPages.tsx","components/ProjPages.tsx","components/OtherPages.tsx","components/Home.tsx","components/Graphix.tsx","components/shaders/Uniforms.ts","components/shaders/Holo.ts","components/xmas/Mom.tsx","components/xmas/Dad.tsx","components/xmas/Sister.tsx","serviceWorker.ts","index.tsx"],"names":["App","className","this","props","children","React","Component","Shortcut","s","style","x","y","src","getIcon","img","alt","label","Menu","state","open","items","onClick","setState","name","map","item","key","link","href","PopUp","Link","Amzn","Mntch","Nvcg","experience","Cgp","Gfx","controls","type","FcRc","Phish","allow","title","Snap","projects","Abt","abt","Home","Graphix","scene","THREE","camera","window","innerWidth","innerHeight","position","z","renderer","setSize","sceneObjects","startTime","Date","now","uniforms","u_time","value","u_resolution","Uniform","Vector2","u_light","Vector3","u_camera","lightIntensity","ambientLightColor","lightProbe","directionalLights","properties","direction","color","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","width","height","ltc_1","ltc_2","initUniforms","filename","sceneRender","updateProjectionMatrix","timestampNow","elapsedSeconds","Math","cos","PI","updateUniforms","render","document","body","appendChild","domElement","pointLight","set","add","ambientLight","adjustLighting","PLYLoader","load","geometry","computeVertexNormals","material","fragmentShader","vertexShader","lights","console","log","mesh","castShadow","receiveShadow","push","animationLoop","object","rotation","requestAnimationFrame","to","Mom","Dad","Sister","Boolean","location","hostname","match","ReactDOM","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.70eb8024.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './components/main.css';\n\nexport class App extends React.Component<{}> {\n  render()\n  {\n    return (<div className=\"App\"> {this.props.children}</div>);\n  }\n}","import React from 'react';\n\ninterface ShortcutProps {\n  label: string;\n  img: string;\n  x: number;\n  y: number;\n}\n\nexport class Shortcut extends React.Component<ShortcutProps> {\n  public getIcon(s: string){\n    switch(s) { \n      case 'folder': {\n        return '/media/folder.png'\n      } \n      case 'pv': {\n        return '/media/pv.png'\n      } \n      case 'mt': {\n        return '/media/mt.png'\n      } \n      case 'nc': {\n        return '/media/nc.png'\n      } \n      case 'me': {\n        return '/media/contact.png'\n      }\n      case 'abt': {\n        return '/media/about.png'\n      } \n      case 'cv': {\n        return '/media/cv.png'\n      } \n      default: { \n        return '/media/folder.png'\n      } \n    } \n  }\n\n  render() {\n    return <div className=\"Icon\"\n      style={{\"transform\": `translate(${this.props.x}vw, ${this.props.y}vh)`}}>\n      <img className=\"IconIcon\" src={this.getIcon(this.props.img)} alt='clickable'/>\n      <div className=\"IconLabel\"> {this.props.label} </div>\n    </div>\n  }\n\n}\n","import React from 'react';\n\nimport { Link } from './common/Link';\nimport { Shortcut } from './Shortcut'\n\ninterface MenuProps {\n  items: Link[];\n  name: string;\n  img: string;\n  x: number;\n  y: number;\n}\n\ninterface MenuState {\n  open: boolean;\n}\n\n\nexport class Menu extends React.Component<MenuProps, MenuState> {\n  constructor(props: MenuProps) {\n    super(props);\n    this.state = {open: false}\n  }\n\n  render()\n  {\n    const items = this.props.items;\n    return (\n      <div className=\"Menu\">\n      <div className=\"clickable\"\n          onClick={() => this.setState({open: true})}>\n        <Shortcut label={this.props.name} img={this.props.img} x={this.props.x} y={this.props.y}/>\n      </div>\n      {this.state.open && \n      <div className=\"Window red\">\n        <div className=\"MenuHeader\">\n          <span> {this.props.name} </span>\n          <div className=\"CancelButton right clickable\" onClick={() => this.setState({open: false})}>\n            x\n          </div> \n        </div>\n      {\n        items.map( (item) => {\n          return <PopUp key={item.label} link={item}>\n                {item.href}\n            </PopUp>;\n        })\n      }\n      {this.props.children}\n      </div>\n      }\n    </div>);\n  }\n}\n\ninterface PopUpProps {\n  link: Link;\n}\n\ninterface PopUpState {\n  open: boolean;\n}\n\nexport class PopUp extends React.Component<PopUpProps, PopUpState> {\n  constructor(props: PopUpProps) {\n    super(props);\n    this.state = {open: false}\n  }\n\n  render() {\n    const link = this.props.link;\n    return (<div className = {`PopUp`}>\n        <div className=\"clickable\" onClick={() => this.setState({open: true})}>\n          <Shortcut label={link.label} img={link.img} x={link.x} y={link.y}/>\n        </div>\n        {\n          this.state.open &&\n          <div className=\"Window green\">\n          <div className=\"MenuHeader\">\n            <span>\n              {link.label}\n            </span>\n            <div className=\"CancelButton right clickable\" onClick={() => this.setState({open: false})}> x </div>\n          </div>\n          <div> {this.props.children} </div>\n          </div>\n        }\n    </div>);\n  }\n}\n","export class Link { \n    label: string;\n    href: any;\n    x: number;\n    y: number;\n    img: string;\n    constructor (label: string, href: any, x: number, y: number, img: string) {\n        this.href = href;\n        this.label = label;\n        this.x = x;\n        this.y = y;\n        this.img = img;\n    }\n}\n ","import React from 'react';\nimport { Link } from './common/Link'\n\nclass Amzn extends React.Component<{}> {\n    render(){\n        return(<div>\n                <div className = \"LeftSlide\">\n                    Title: Software Development Engineer\n                </div>\n\n                <div className = \"RightSlide\">\n                <p> Prime Video, Playback Services </p>\n                <p> Time: November 2019 - present </p>\n                <p>\n                    I have spent the most of my time at Amazon working with Prime Video. My team manages \n                    the first point of interaction for the customer between selecting a title and \n                    initializing playback on Prime Video. I work in a variety of areas to support on of the largest video streaming platforms\n                    in the world. We maintain services that are massively scaled with high reliability. My work includes standard\n                    full stack software engineering, system design and integration, and support tooling.\n                </p> \n                </div>\n                <div className = \"LeftSlide\">\n                <p> AWS, Support Engineering </p>\n                <p> Time: July 2019 - October 2019 </p>\n                <p> \n                    I started out at Amazon working with AWS Support Engineering. My team worked on a service that managed\n                    secure interaction with Amazon's largest corporate customers. This was my first time working on something\n                    at such a large scale, and was an extremely valuable learning experience.\n                </p>\n                </div>\n\n            </div>\n        );\n    }\n};\n\nclass Mntch extends React.Component<{}> {\n    render(){\n        return(<div className = \"LeftSlide\">\n                Title: Security Research Intern\n            <p> Time: Summer 2018 </p>\n            <p> Conducted security research (reverse-engineering and network forensics)\n            against mobile platforms and support- ing infrastructure for clients and internal audits.\n            Utilized knowledge of software, operating systems, and computer networks to detect and exploit vulnerabilities. Performed vulnerability research on embedded systems. Created plugins for existing software platforms to aid in research. \n            </p>\n            </div>\n        );\n    }\n};\n\nclass Nvcg extends React.Component<{}> {\n    render(){\n        return(<div>\n            <div className = \"RightSlide\">\n                Title: Research Assistant\n                <p> Time: Summer 2016 </p>\n                <p> I supported development and testing of a tool to allow the visually impaired accurately and reliably navigate inside buildings.\n                Performed data collection and analysis to enable accurate localization. Deployed and managed BLE beacons to allow for accurate location services in indoor spaces.\n                Configured server to allow for real-time beacon data collection.\n                Contributed to software development for iPhone app.\n                </p>\n            </div>\n            <div className = \"LeftSlide\">\n                <p>\n                The NavCog Project has since continued development, reaching full deployment in the Pittsburgh International Airport, the Tokyo Narita International Airport and several other locations.\n                Read more about the project <a href=\"https://www.cs.cmu.edu/~NavCog/navcog.html\"> here </a>\n                </p>\n            </div>\n            </div>\n        );\n    }\n};\n\nexport const experience = [\n    new Link(\"Amazon\", <Amzn />, 3, 3, \"pv\"),\n    new Link(\"NavCog\", <Nvcg />, 3, 25, \"nc\"),\n    new Link(\"ManTech\", <Mntch />, 25, 25,\"mt\")\n]","import React from 'react';\nimport { Link } from './common/Link'\n\nclass Cgp extends React.Component<{}> {\n    render(){\n        return(<div className=\"WriteUp\">\n                <div className=\"RightSlide\">\n                Senior year of College, I took a class called Computer Game Programming in which we essentially built our own game engines using C++ and OpenGL. \n\n                Below are a compilation of several games I built in the class. They are all my own personal designs and all include assets I created for the games.\n                </div>\n                <div className=\"LeftSlide\">\n                <h2> Undercooked </h2>\n                The first project I worked on was a simplified 1 player version of the game Overcooked, the main goal here was to get used to the OpenGL pipeline. In addition, this project involved figuring out how to export vertex colors using Blender. Relatively simple, the idea being to assemble a peanut butter and jelly sandwhich.\n                </div>\n                <img src={\"/media/cook.gif\"} alt=\"a gif of the game\" className=\"CenterImg\"/>\n                <br />\n                <div className=\"RightSlide\">\n                <h2> The Gnarly Janitor </h2>\n                This project entailed implementing walkmesh data structure as well as scene loading with transform hierarchies. The concept of this game is to clean up some messes and spills on at a skatepark.\n                </div>\n                <img src={\"/media/janitor.gif\"} alt=\"a gif of the game\" className=\"CenterImg\"/>\n                <br />\n                <div className=\"RightSlide\">\n                <h2> Fish Off </h2>\n                The game involved creating a multiplayer game using an online server. Although a relatively simple implementation, the server program handles a lot of the computation while the clients fill the drawing. The object in this game is to catch more fish than your opponent.\n                </div>\n                <img src={\"/media/fish.gif\"} alt=\"a gif of the game\" className=\"CenterImg\"/>\n                <br />\n                <div className=\"LeftSlide\">\n                <h2> Sweet Darkness </h2>\n                This project was my first major step into working with shaders using GLSL. This involved implementing shadow maps as well as working with textures. The object of this game is to keep the ice cream in the shadow as it orbits in space.\n                </div>\n                <img src={\"/media/sweet_dark.gif\"} alt=\"a gif of the game\" className=\"CenterImg\"/>\n            </div>\n        );\n    }\n};\n\nclass Gfx extends React.Component<{}> {\n    render(){\n        return(<div className=\"WriteUp\">\n        <div className=\"RightSlide\">\n        Scotty3D is a three-part assignment for CMU's Computer Graphics 15-462. The intent is to fully create a 3D modeling software from a very barebones framework. The final product is able to create and edit meshes, render realistic lighting with raytracing, and create animations to move meshes.\n        </div>\n        <div className=\"LeftSlide\">\n        The applications first part is a Mesh editor. This results in an applications capable of simple operations such as basic edge and vertex editing as well as more complex operations such as Beveling and Subdivisions.\n        By combining various operations, we are able to create a very high polygon model.\n        </div>\n        <img src=\"../media/apple.png\" alt=\"appl\"/>\n        <div className=\"centered\">Roughly Edited Mesh</div>\n        <img src=\"../media/apple-subdiv.png\" alt=\"woo\"/>\n        <div className=\"centered\">After 2 Iterations of Catmull-Clark Subdivision</div>\n        <div className=\"RightSlide\">\n        The next part of the process involved implementing a full Ray-Tracing renderer. \n        The application uses a Bounding Volume Hierarchy to accelerate ray intersection calculations. \n        Light traces may involve absorption, light bounces via Monte Carlo Ray-tracing, \n        shadow ray-tracing as well as environmental lighting maps, \n        all depending on the material properties of the model and scene. \n        The renderer has support for Lambertian, Mirror and Metallic, \n        as well as Glass-like and transparent surfaces implemented through \n        Bidirectional Scattering Distribution Functions. \n        </div>\n            <img src=\"../media/lucy_mesh.png\" alt=\"mesh\"/>\n            <div className=\"centered\"> Polygonal Mesh </div>\n            <img src=\"../media/bvh.gif\"  alt=\"bvh\"/>\n            <div className=\"centered\"> BVH Generated </div>\n            <img src=\"../media/lucy_render.png\" alt=\"render\"/>\n            <div className=\"centered\"> final render </div>\n            <img src=\"../media/glass.png\" alt=\"glass render\"/>\n            <div className=\"centered\"> Glass Sphere with environmental light map </div>\n\n        <div className=\"RightSlide\">\n        Finally, the project concludes with an simple mesh animation set of tools. Features include motion paths with cubic spline interpolation, wave functions on a mesh surface, and pill capsule bound animation rigs with inverse kinematics\n        </div>\n        <video controls>\n            <source src=\"../media/animation.mp4\" type=\"video/mp4\" />\n        </video>\n        <div className=\"centered\"> A simple animation showcasing the Cubic Spline Paths </div>\n    </div>\n        );\n    }\n};\n\nclass FcRc extends React.Component<{}> {\n    render(){\n        return(<div className=\"WriteUp\">\n            <img src=\"../media/face-race.png\" alt=\"screencap from the project\"/>\n            <div className=\"centered\"> Start Screen </div>\n            <div className=\"RightSlide\">\n            Face Race was a group project I worked on as the Final Project for my Computer Game Programming class. The basic premise of the game was to manipulate a character's face to allow the player react to situations and give the character proper facial reactions.\n            </div>\n            <div className=\"RightSlide\">\n            As the rest of the class, the game is written from scratch using C++ for engine and OpenGL/GLSL for graphics. The project also involved creating Shape Keys for the character mesh, which was done using Blender. This also involved being able to export the weights from the shapekeys using a python script, and subsequently import the weights into the application to allow for programmatic manipulation of the weights of the keys. The gameplay involves using the grab points to manipulate the shape keys and create the indicated facial expressions on the User Interface based on the prompts. \n            </div>\n            <div className=\"RightSlide\">\n            Also implemented on the game is environment based lighting and a rim shader on the character, done using OpenGL and GLSL.\n            </div>\n            <video controls={true} src=\"../media/face-race.mov\">\n            </video>\n            Video of the described gameplay\n        </div>\n        );\n    }\n};\n\nclass Phish extends React.Component<{}> {\n    render() {\n        return (<div className=\"WriteUp\">\n        <div className=\"RightSlide\">\n            This is my final project for CMU's Fundamentals of Programming class, 15-112. \n        </div>\n        <div className=\"LeftSlide\">\n        <iframe src='https://www.youtube.com/embed/Z4N-xdbb3TI?rel=0&amp;showinfo=0'\n        allow='autoplay; encrypted-media'\n        title='video'\n        style={{\"width\": \"100%\", \"height\": \"600px\", \"display\":\"inline-block\", \"margin\":\"auto\"}}/>\n        </div>\n        <div className=\"LeftSlide\">\n            The game itself is a basic top-down shooter style adventure game. The game follows a basic storyline: your goal is to collect data from users (with the information being pieces of data from Twitter users pulled via an API) and decode this data, eventually decrypting the relevant data to figure out crucial personal information.\n        </div>\n        <div className=\"RightSlide\">\n            Essentially, the design was a play on the amount of information users post online without thinking using social media. One of my main goals was also to use the basic Pythongraphics package to create a visually desirable product.       \n            The above video showcases the basic funcionality of the game.\n        </div>\n        </div>\n        );\n    }\n}\n\nclass Snap extends React.Component<{}> {\n    render() {\n        return (<div className=\"WriteUp\">\n        <div className=\"RightSlide\">\n            This is my final project for CMU's Applied Computational Intelligence Lab class, 11-291.\n            The original intent of the project was a fun, interactive, sound-based virtual reality experience.\n            Our intent in creating the proof of concept was to simulate interesting virtual environments and allow the user to feel like they have been transported to a new and interesting place.\n        </div>\n        <div className=\"LeftSlide\">\n            After going through some planning and implementation, the project was realized as follows:\n            The user wears a smart phone device on their head, giving the application access to both audio outputting capabilities and gyroscope tracking of the head movement.\n            In order for audio location to be accurate, an approximation of the Head-Related Transfer Function was used. Essentially, the brain is able to relate audio to 3-Dimensional position based on the amount of sound coming into each ear, which is effected by the shape of the human head. \n            The completed application also utilizes a bluetooth remote in the form of a Nintendo joy-con to help position the user based on movement, as the head tracking of the phone is limited to orbit controls. (Meaning the user must record when taking steps with the controller for the sound-location to be accurate)\n        </div>\n            <img src=\"../media/snap_head.png\" alt=\"concept mockup\"/>\n            <div className=\"centered\"> basic setup </div>\n            <br />\n            <img src=\"../media/snap_hrtf.png\" alt=\"concept mockup\"/>\n            <div className=\"centered\">HRTF visualized </div>\n            <div className=\"LeftSlide\">\n            SNAP was mostly a proof of concept of the capabilities of such a project, but the implications of the technology could be extended to various realms. One such idea we had come up with was to use the sound-location ability to help a sight-impared user navigate a building in real life, using various tones to indicate where walls and doorways exist.\n            <img src=\"../media/snap_extend.png\" alt=\"concept mockup\"/>\n            <div className=\"centered\"> extending the project</div>\n            </div>\n        </div>\n        );\n    }\n}\n\n\n\nexport const projects = [\n    new Link(\"Computer Game Programming\", <Cgp />, 3, 3, \"folder\"),\n    new Link(\"Face Race\", <FcRc />, 3, 25, \"folder\"),\n    new Link(\"Scotty3D\", <Gfx />, 25, 3, \"folder\"),\n    new Link(\"Phish\", <Phish />, 25, 25, \"folder\"),\n    new Link(\"Snap\", <Snap />, 3, 48, \"folder\")\n]","import React from 'react';\nimport { Link } from './common/Link'\n\nclass Abt extends React.Component<{}> {\n    render() {\n        return <div>\n            <div className = \"LeftSlide\">\n             Hello, my name is Jame&#115;&#32;G&#117;&#97;ltie&#114;i, thanks for visiting my website!\n             </div>\n            <div className = \"RightSlide\">\n                I'm currently a Software Development Engineer and Amazon Prime Video, based in Seattle. I recently graduated from Carnegie Mellon University, getting my Bachelor Degree in Electrical and Computer Engineering. My technical interests include Computer Graphics and Animation and Cyber Security. I really enjoy the intersection of technology with other industries, specifically in the entertainment sector.\n            </div>\n            <img src=\"media/amazon-james.png\" style={{\"width\": \"60%\", \"display\":\"block\", \"margin\":\"auto\"}}\n            alt=\"it's just me smiling :)\"/>\n            <div className = \"LeftSlide\">\n                Outside of working with software, I enjoy film, playing video games, and keeping up with sports when I can. I've lived most of my life in Pittsburgh, but I like to travel and experience nature and National Parks. While I don't have a lot of experience doing so, I very much enjoy working with graphic design as well as 3D modeling, and experimenting with different ways I feel like styling this website!\n            </div>\n            <div className = \"RightSlide\">\n                Feel free to reach out to me!\n            </div>\n        </div>\n    }\n}\n\nexport const abt = new Link(\"About Me\", <Abt />, 3, 3, \"abt\");\nexport const gfx = new Link(\"Fun With Graphics\", <div />, 53, 3, \"abt\");","import React from 'react';\n// import { Link } from 'react-router-dom'\n\n\nimport { Menu, PopUp } from './Menu';\nimport { Shortcut } from './Shortcut'\nimport { experience } from './ExpPages'\nimport { projects } from './ProjPages'\nimport { abt } from './OtherPages';\n// import { abt, gfx } from './OtherPages';\n\nexport class Home extends React.Component<{}> {\n  render()\n  {\n      return (<div>\n        <div className=\"banner-header\">\n          <div className=\"ticker\" >\n            <div className=\"ticker-item\" > \n               Welcome to my website!\n            </div>\n            <div className=\"ticker-item\" > \n              Thanks for stopping by! \n            </div>\n          </div>\n        </div>\n        <div className=\"CompScreen\">\n            <a href='m&#97;i&#108;&#116;o&#58;&#109;e&#64;jam&#101;%73&#103;ual%&#55;4%69er&#105;.co%6D'>\n              <Shortcut label={'contact me!'} img={\"me\"} x={25} y={3}/>\n            </a>\n            <a href='media/resume.pdf'>\n              <Shortcut label={'resume'} img={\"cv\"} x={25} y={48}/>\n            </a>\n            <Menu items = { experience } name=\"experience\" img=\"folder\" x={3} y={25}/>\n            <Menu items = { projects } name=\"projects\" img=\"folder\" x={25} y={25}/>\n            <PopUp link={ abt } > { abt.href } </PopUp>\n            {/*{<Link to=\"graphics\">\n              // currently tryhing to figure out how to use customer shaders in web gl to show\n              // that i know how to do 3d shaders (allegedly)\n              <PopUp link={ gfx } > { abt.href } </PopUp>\n            </Link>}*/}\n        </div>\n        {this.props.children}\n      </div>);\n  }\n}","import React from 'react';\nimport * as THREE from \"three\";\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader.js';\nimport { Link } from 'react-router-dom';\nimport { vertexShader, fragmentShader} from './shaders/Holo';\nimport { standardUniforms } from './shaders/Uniforms';\n\n\n// still trying to figure this out\n\nexport class Graphix extends React.Component<{}> {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n    var scene = new THREE.Scene()\n\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n    camera.position.z = 5\n\n    var renderer = new THREE.WebGLRenderer()\n    renderer.setSize(window.innerWidth, window.innerHeight)\n\n    var sceneObjects:any = [];\n\n    var startTime = Date.now();\n    var initUniforms = function(uniforms: any) {\n      uniforms.u_resolution.value.x = window.innerWidth;\n      uniforms.u_resolution.value.y = window.innerHeight;\n      uniforms.u_light = new THREE.Vector3(0.2, 0.2, 0.0);\n      uniforms.u_camera = new THREE.Vector3(0.0, -1.0, 0.0);\n    }\n    var uniforms = standardUniforms();\n    initUniforms(uniforms);\n\n    var updateUniforms = function(uniforms: any) {\n      uniforms.u_resolution.value.x = window.innerWidth;\n      uniforms.u_resolution.value.y = window.innerHeight;\n      camera.updateProjectionMatrix(); \n\n      var timestampNow = Date.now()\n      var elapsedMilliseconds = timestampNow - startTime;\n      var elapsedSeconds = elapsedMilliseconds / 1000.;\n      uniforms.u_time.value = 60. * elapsedSeconds;\n\n      var lightIntensity = 0.75 +0.25 * Math.cos(timestampNow * Math.PI);\n      uniforms.lightIntensity.value = lightIntensity;\n    }\n\n    var adjustLighting = function() {\n      let pointLight = new THREE.PointLight(0xdddddd)\n      pointLight.position.set(-5, -3, 3)\n      scene.add(pointLight)\n\n      let ambientLight = new THREE.AmbientLight(0x505050)\n      scene.add(ambientLight)\n    }\n\n    var sceneRender = function() {\n      updateUniforms(uniforms);\n      renderer.render(scene, camera);\n    }\n\n    var animationLoop = function() {\n      sceneRender();\n\n      for(let object of sceneObjects) {\n        object.rotation.x += 0.005\n        object.rotation.y += 0.005\n      }\n\n      requestAnimationFrame(animationLoop);\n    }\n\n    var addMesh = function(filename: string) {\n      const loader = new PLYLoader();\n\n      loader.load( filename, function ( geometry ) {\n        geometry.computeVertexNormals();\n        var material =  new THREE.ShaderMaterial({\n          uniforms: uniforms,\n          fragmentShader: fragmentShader(),\n          vertexShader: vertexShader(),\n          lights: true\n        });\n        console.log(uniforms);\n\n        var mesh = new THREE.Mesh( geometry, material );\n\n        mesh.position.y = - 0.2;\n        mesh.position.z = 0.3;\n\n\n        mesh.castShadow = true;\n        mesh.receiveShadow = true;\n\n        scene.add( mesh );\n        sceneObjects.push(mesh)\n      } );\n\n    }\n\n    document.body.appendChild(renderer.domElement);\n    adjustLighting();\n    addMesh('media/appl.ply');\n    animationLoop();\n\n  }\n\n  render() {\n    return (<div>\n      <Link to=\"/\"> Home </Link>\n      <h1> GFX\n      </h1>\n    </div>)\n  }\n}","import {\n  Uniform,\n  Vector2,\n  Vector3\n} from \"three\";\n\nexport function standardUniforms() \n{\n  return({\n    u_time: { value: 0.0 },\n    u_resolution: { value: new Uniform( new Vector2() ) },\n    u_light: { value: new Uniform (new Vector3())},\n    u_camera: { value: new Uniform (new Vector3())},\n    lightIntensity: {type: 'f', value: 1.0},\n    ambientLightColor: { value: [] },\n\n    lightProbe: { value: [] },\n\n    directionalLights: { value: [], properties: {\n      direction: {},\n      color: {}\n    } },\n\n    directionalLightShadows: { value: [], properties: {\n      shadowBias: {},\n      shadowNormalBias: {},\n      shadowRadius: {},\n      shadowMapSize: {}\n    } },\n\n    directionalShadowMap: { value: [] },\n    directionalShadowMatrix: { value: [] },\n\n    spotLights: { value: [], properties: {\n      color: {},\n      position: {},\n      direction: {},\n      distance: {},\n      coneCos: {},\n      penumbraCos: {},\n      decay: {}\n    } },\n\n    spotLightShadows: { value: [], properties: {\n      shadowBias: {},\n      shadowNormalBias: {},\n      shadowRadius: {},\n      shadowMapSize: {}\n    } },\n\n    spotShadowMap: { value: [] },\n    spotShadowMatrix: { value: [] },\n\n    pointLights: { value: [], properties: {\n      color: {},\n      position: {},\n      decay: {},\n      distance: {}\n    } },\n\n    pointLightShadows: { value: [], properties: {\n      shadowBias: {},\n      shadowNormalBias: {},\n      shadowRadius: {},\n      shadowMapSize: {},\n      shadowCameraNear: {},\n      shadowCameraFar: {}\n    } },\n\n    pointShadowMap: { value: [] },\n    pointShadowMatrix: { value: [] },\n\n    hemisphereLights: { value: [], properties: {\n      direction: {},\n      skyColor: {},\n      groundColor: {}\n    } },\n\n    // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n    rectAreaLights: { value: [], properties: {\n      color: {},\n      position: {},\n      width: {},\n      height: {}\n    } },\n\n    ltc_1: { value: null },\n    ltc_2: { value: null }\n\n  });\n}","export function vertexShader() {\n  return `\n    uniform float u_time;\n    uniform vec2 u_resolution;\n\n    void main() {\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n    }\n  `\n  // return `\n  //   #ifdef GL_ES\n  //   precision mediump float;\n  //   #endif\n\n  //   uniform float       u_time;\n  //   uniform vec2        u_resolution;\n  //   uniform mat4 u_modelViewProjectionMatrix;\n\n  //   attribute vec4  a_position;\n  //   varying vec4    v_position;\n\n  //   #ifdef MODEL_VERTEX_COLOR\n  //   attribute vec4  a_color;\n  //   varying vec4    v_color;\n  //   #endif\n\n  //   #ifdef MODEL_VERTEX_NORMAL\n  //   attribute vec3  a_normal;\n  //   varying vec3    v_normal;\n  //   #endif\n\n  //   #ifdef MODEL_VERTEX_TEXCOORD\n  //   attribute vec2  a_texcoord;\n  //   varying vec2    v_texcoord;\n  //   #endif\n\n  //   void main(void) {\n  //       v_position = a_position;\n  //       float height = -1. + mod(u_time, 3.);\n  //       vec2 range = vec2(height-0.5, height+0.2);\n  //       mat4 test = mat4(\n  //           vec4(1., 0., 0., 0.02*(cos(u_time + v_position.y)+1.)),           // first column\n  //           vec4(0., 1., 0., 0.01*(cos(u_time + v_position.y)+1.)),           // second column\n  //           vec4(0., 0., 1., 0.),           // third column\n  //           vec4(0., 0., 0., 1.));  \n        \n  //   #ifdef MODEL_VERTEX_COLOR\n  //       v_color = a_color;\n  //   #endif\n        \n  //   #ifdef MODEL_VERTEX_NORMAL\n  //       v_normal = a_normal;\n  //   #endif\n        \n  //   #ifdef MODEL_VERTEX_TEXCOORD\n  //       v_texcoord = a_texcoord;\n  //   #endif\n        \n  //       gl_Position = u_modelViewProjectionMatrix  * v_position;\n  //   }\n  // `\n}\n\nexport function fragmentShader() {\n//   return `\n//     uniform float u_time;\n\n//     void main() {\n//         gl_FragColor = vec4(1.0,0.0,1.0,1.0);\n//     }\n\n// `\n  return `\n    uniform vec3        u_camera;\n    uniform vec3        u_light;\n    uniform vec2        u_resolution;\n    uniform float       u_time;\n\n    varying vec4        v_position;\n\n    #ifdef MODEL_VERTEX_COLOR\n    varying vec4        v_color;\n    #endif\n\n    #ifdef MODEL_VERTEX_NORMAL\n    varying vec3        v_normal;\n    #endif\n\n    #ifdef MODEL_VERTEX_TANGENT\n    varying vec4        v_tangent;\n    varying mat3        v_tangentToWorld;\n    #endif\n\n    #ifdef MODEL_VERTEX_TEXCOORD\n    varying vec2        v_texcoord;\n    #endif\n\n    uniform vec2 u_mouse;\n\n    uniform float lightIntensity;\n    uniform sampler2D textureSampler;\n     \n    struct PointLight {\n      vec3 color;\n      vec3 position; // light position, in camera coordinates\n      float distance; // used for attenuation purposes. Since\n                      // we're writing our own shader, it can\n                      // really be anything we want (as long as\n                      // we assign it to our light in its\n                      // \"distance\" field\n    };\n     \n    uniform PointLight pointLights[NUM_POINT_LIGHTS];\n     \n\n    vec3 noise(in vec2 st) {\n        float modifier = mod(u_time*3., 16.);\n        float noise_fn = fract(sin(st.y* modifier) + cos(st.y*73.0 + 5.*modifier));\n        return noise_fn*vec3(1.);\n    }\n\n    void main() {\n        vec2 st = gl_FragCoord.st/u_resolution.xy;\n        float fn = st.x -1. + mod(u_time/4., 2.);\n        vec3 tint = vec3(0.5415, 1.0, 0.55);\n        vec3 color = vec3(1.0);\n\n    #ifdef MODEL_VERTEX_COLOR\n        color *= v_color.rgb;\n    #endif\n        tint;\n        // color = noise(st) * tint;\n\n    #ifdef MODEL_VERTEX_NORMAL\n        vec3 n = normalize(v_normal);\n        vec3 l = normalize(u_light);\n        vec3 v = normalize(u_camera - v_position.xyz);\n        float dir = dot(u_camera, v_normal);\n\n        float blend = 0.5;\n        float diffuse = (dot(n, l) + 1.0 ) * blend;\n        color *= (blend * diffuse );\n    #endif\n        gl_FragColor = vec4(color,1.);\n    }\n\n  `\n}","import React from 'react';\n\n\nexport class Mom extends React.Component<{}> {\n    render() {\n      return (<div>mom</div>)\n    }\n}","import React from 'react';\n\n\nexport class Dad extends React.Component<{}> {\n    render() {\n      return (<div>dad</div>)\n    }\n}","import React from 'react';\n\n\nexport class Sister extends React.Component<{}> {\n    render() {\n      return (<div>trina</div>)\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { Home } from './components/Home';\nimport { Graphix } from './components/Graphix';\nimport { Mom } from './components/xmas/Mom';\nimport { Dad } from './components/xmas/Dad';\nimport { Sister } from './components/xmas/Sister';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App>\n        <Router>\n            <Routes>\n                <Route path='/'>\n                    <Home/>\n                </Route>\n                <Route path='graphics'>\n                    <Graphix/>\n                </Route>\n                <Route path='mom'>\n                    <Mom/>\n                </Route>\n                <Route path='dad'>\n                    <Dad/>\n                </Route>\n                <Route path='trina'>\n                    <Sister/>\n                </Route>\n            </Routes>\n        </Router>\n    </App>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}